{"ast":null,"code":"import { useState, useEffect } from \"react\";\nconst defaultState = {\n  image: undefined,\n  status: \"loading\"\n};\nexport const useImage = (url, crossOrigin) => {\n  const res = useState(defaultState);\n  const image = res[0].image;\n  const status = res[0].status;\n  const setState = res[1];\n  useEffect(() => {\n    if (!url) return;\n    const img = document.createElement(\"img\");\n\n    function onload() {\n      setState({\n        image: img,\n        status: \"loaded\"\n      });\n    }\n\n    function onerror() {\n      setState({\n        image: undefined,\n        status: \"failed\"\n      });\n    }\n\n    img.addEventListener(\"load\", onload);\n    img.addEventListener(\"error\", onerror);\n    crossOrigin && (img.crossOrigin = crossOrigin);\n    img.src = url;\n    return () => {\n      img.removeEventListener(\"load\", onload);\n      img.removeEventListener(\"error\", onerror);\n      setState(defaultState);\n    };\n  }, [url, crossOrigin]); // return array because it it better to use in case of several useImage hooks\n  // const [background, backgroundStatus] = useImage(url1);\n  // const [patter] = useImage(url2);\n\n  return [image, status];\n};","map":{"version":3,"sources":["/Users/vik/mediawebsite2/src/hooks.js"],"names":["useState","useEffect","defaultState","image","undefined","status","useImage","url","crossOrigin","res","setState","img","document","createElement","onload","onerror","addEventListener","src","removeEventListener"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,KAAK,EAAEC,SAAT;AAAoBC,EAAAA,MAAM,EAAE;AAA5B,CAArB;AACA,OAAO,MAAMC,QAAQ,GAAG,CAACC,GAAD,EAAMC,WAAN,KAAsB;AAC5C,QAAMC,GAAG,GAAGT,QAAQ,CAACE,YAAD,CAApB;AACA,QAAMC,KAAK,GAAGM,GAAG,CAAC,CAAD,CAAH,CAAON,KAArB;AACA,QAAME,MAAM,GAAGI,GAAG,CAAC,CAAD,CAAH,CAAOJ,MAAtB;AAEA,QAAMK,QAAQ,GAAGD,GAAG,CAAC,CAAD,CAApB;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACM,GAAL,EAAU;AACV,UAAMI,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAZ;;AAEA,aAASC,MAAT,GAAkB;AAChBJ,MAAAA,QAAQ,CAAC;AAAEP,QAAAA,KAAK,EAAEQ,GAAT;AAAcN,QAAAA,MAAM,EAAE;AAAtB,OAAD,CAAR;AACD;;AAED,aAASU,OAAT,GAAmB;AACjBL,MAAAA,QAAQ,CAAC;AAAEP,QAAAA,KAAK,EAAEC,SAAT;AAAoBC,QAAAA,MAAM,EAAE;AAA5B,OAAD,CAAR;AACD;;AAEDM,IAAAA,GAAG,CAACK,gBAAJ,CAAqB,MAArB,EAA6BF,MAA7B;AACAH,IAAAA,GAAG,CAACK,gBAAJ,CAAqB,OAArB,EAA8BD,OAA9B;AACAP,IAAAA,WAAW,KAAKG,GAAG,CAACH,WAAJ,GAAkBA,WAAvB,CAAX;AACAG,IAAAA,GAAG,CAACM,GAAJ,GAAUV,GAAV;AAEA,WAAO,MAAM;AACXI,MAAAA,GAAG,CAACO,mBAAJ,CAAwB,MAAxB,EAAgCJ,MAAhC;AACAH,MAAAA,GAAG,CAACO,mBAAJ,CAAwB,OAAxB,EAAiCH,OAAjC;AACAL,MAAAA,QAAQ,CAACR,YAAD,CAAR;AACD,KAJD;AAKD,GAtBQ,EAsBN,CAACK,GAAD,EAAMC,WAAN,CAtBM,CAAT,CAP4C,CA+B5C;AACA;AACA;;AACA,SAAO,CAACL,KAAD,EAAQE,MAAR,CAAP;AACD,CAnCM","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst defaultState = { image: undefined, status: \"loading\" };\nexport const useImage = (url, crossOrigin) => {\n  const res = useState(defaultState);\n  const image = res[0].image;\n  const status = res[0].status;\n\n  const setState = res[1];\n\n  useEffect(() => {\n    if (!url) return;\n    const img = document.createElement(\"img\");\n\n    function onload() {\n      setState({ image: img, status: \"loaded\" });\n    }\n\n    function onerror() {\n      setState({ image: undefined, status: \"failed\" });\n    }\n\n    img.addEventListener(\"load\", onload);\n    img.addEventListener(\"error\", onerror);\n    crossOrigin && (img.crossOrigin = crossOrigin);\n    img.src = url;\n\n    return () => {\n      img.removeEventListener(\"load\", onload);\n      img.removeEventListener(\"error\", onerror);\n      setState(defaultState);\n    };\n  }, [url, crossOrigin]);\n\n  // return array because it it better to use in case of several useImage hooks\n  // const [background, backgroundStatus] = useImage(url1);\n  // const [patter] = useImage(url2);\n  return [image, status];\n};\n"]},"metadata":{},"sourceType":"module"}